{"version":3,"sources":["api/api.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getPosts","a","fetch","res","json","getUserPosts","userId","getUser","getPostDetails","postId","getPostComments","deletePostComments","commentId","method","addCommentPost","newComment","headers","body","JSON","stringify","PostsList","props","setSelectedPostId","selectedPostId","useState","posts","setPosts","useEffect","getPostFromApi","getUserPostFromApi","className","map","post","title","id","type","onClick","NewCommentForm","addComment","name","setName","email","setEmail","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","PostDetails","postDetails","setPostDetails","postComments","setPostComments","isShowComments","setIsShowComments","getPostDetailsFromApi","getCommentsFromApi","updateComments","removeComments","current","length","comment","App","users","setUsers","setUserId","getUsersFromApi","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d08bdffc.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getPosts = async () => {\n  const res = await fetch(`${BASE_URL}/posts`);\n\n  return res.json();\n};\n\nexport const getUserPosts = async (userId: number) => {\n  const res = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  return res.json();\n};\n\nexport const getUser = async () => {\n  const res = await fetch(`${BASE_URL}/users`);\n\n  return res.json();\n};\n\nexport const getPostDetails = async (postId: number) => {\n  const res = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return res.json();\n};\n\nexport const getPostComments = async (postId: number) => {\n  const res = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return res.json();\n};\n\nexport const deletePostComments = (commentId: number) => {\n  return fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const addCommentPost = async (newComment: Comment) => {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport './PostsList.scss';\nimport { getPosts, getUserPosts } from '../../api/api';\n\ntype Props = {\n  userId: number,\n  setSelectedPostId: (postId: number) => void;\n  selectedPostId: number,\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { userId, setSelectedPostId, selectedPostId } = props;\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      const getPostFromApi = await getPosts();\n\n      setPosts(getPostFromApi);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const getUserPostFromApi = userId ? (await getUserPosts(userId))\n        : (await getPosts());\n\n      setPosts(getUserPostFromApi);\n    })();\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            {(selectedPostId === post.id) ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(0)}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(post.id)}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number,\n  addComment: (newComment: Comment) => void,\n};\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { addComment, postId } = props;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  const handleSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    const newComment = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    addComment(newComment as Comment);\n    resetForm();\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmitForm}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport {\n  addCommentPost, deletePostComments, getPostComments, getPostDetails,\n} from '../../api/api';\n\ntype Props = {\n  selectedPostId: number,\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { selectedPostId } = props;\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [postComments, setPostComments] = useState<Comment[]>([]);\n  const [isShowComments, setIsShowComments] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const getPostDetailsFromApi = await getPostDetails(selectedPostId);\n\n      setPostDetails(getPostDetailsFromApi);\n    })();\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    (async () => {\n      const getCommentsFromApi = await getPostComments(selectedPostId);\n\n      setPostComments(getCommentsFromApi);\n    })();\n  }, [selectedPostId]);\n\n  const addComment = async (newComment: Comment) => {\n    await addCommentPost(newComment);\n    const updateComments = await getPostComments(selectedPostId);\n\n    setPostComments(updateComments);\n  };\n\n  const removeComments = async (commentId: number) => {\n    await deletePostComments(commentId);\n    const updateComments = await getPostComments(selectedPostId);\n\n    setPostComments(updateComments);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setIsShowComments(current => !current)}\n        >\n          {isShowComments ? 'Hide' : 'Show'}\n          {' '}\n          {postComments.length}\n          {' '}\n          comments\n        </button>\n\n        {isShowComments && (\n          <ul className=\"PostDetails__list\">\n            {postComments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => removeComments(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            addComment={addComment}\n            postId={selectedPostId}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUser } from './api/api';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const getUsersFromApi = await getUser();\n\n      setUsers(getUsersFromApi);\n    })();\n  }, []);\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select className=\"App__user-selector\" onChange={handleChangeUser}>\n            <option value={0}>All users</option>\n            {users.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        {!!selectedPostId && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={selectedPostId} />\n          </div>\n        ) }\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}